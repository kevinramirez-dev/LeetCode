Instructions:
    - You are given a 0-indexed array of integers nums of length n. You are initially positioned at nums[0].

      Each element nums[i] represents the maximum length of a forward jump from index i. In other words, if you are at nums[i], you can jump to any nums[i + j] where:

          0 <= j <= nums[i] and
          i + j < n

      Return the minimum number of jumps to reach nums[n - 1]. The test cases are generated such that you can reach nums[n - 1].

Thought Process:
    - Given that the array always procides a path to the end, we need to take the minimal amount of steps possible.
        - Our starting point will always be index 0 and the number that we start with will be out threshold
        - The pattern will continue until we find the most efficient path to the last index
